name: CodeChecks

on:
  push:
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php:
          - '7.4'
          - '8.0'
          - '8.1'

    name: PHP ${{ matrix.php }} tests

    env:
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_DATABASE: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up MySQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -e 'SHOW VARIABLES LIKE "version%";' -u${{ env.DB_USERNAME }} -p${{ env.DB_PASSWORD }}
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USERNAME }} -p${{ env.DB_PASSWORD }}
          mysql -h${{ env.DB_HOST }} -P${{ env.DB_PORT }} -u${{ env.DB_USERNAME }} -p${{ env.DB_PASSWORD }} ${{ env.DB_DATABASE }} < schema/mysql.sql

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: xdebug

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php${{ matrix.php }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php${{ matrix.php }}-

      - name: Composer
        run: composer install --no-progress

      - name: Check CS
        run: vendor/bin/ecs

      - name: PHPUnit
        run: vendor/bin/phpunit --coverage-clover=coverage.xml
        env:
          INTEGRATION_ENABLED: 1

      - name: "Upload coverage to Codecov"
        uses: "codecov/codecov-action@v3"
